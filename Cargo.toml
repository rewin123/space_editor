[package]
name = "space_editor"
version.workspace = true 
edition.workspace = true 
license.workspace = true 
authors.workspace = true 
keywords.workspace = true 
categories.workspace = true 
exclude = ["/assets", "/examples"]
description = "Prefab editor for bevy game engine. Make levels/object templates with intuitive UI"
readme = "README.md"
homepage = "https://github.com/rewin123/space_editor"
repository = "https://github.com/rewin123/space_editor"
default-run = "space_editor"

[workspace]
members = [
    "game",
    "crates/*",
    "external/editor_as_plugin", 
    "workspace-hakari"
]

resolver = "2"

[[bin]]
name = "game_app"
path = "game/src/main.rs"

[[bin]]
name = "plugin_test"
path = "external/editor_as_plugin/src/main.rs"

[workspace.package]
version = "0.8.0"
edition = "2024"
license = "MIT OR Apache-2.0"
authors = ["rewin <rewin1996@gmail.com>", "Julia Naomi <jnboeira@outlook.com>"]
keywords = ["gamedev", "editor", "bevy"]
categories = ["game-development"]
repository = "https://github.com/rewin123/space_editor"
homepage = "https://github.com/rewin123/space_editor"

[workspace.dependencies]
bevy = { version = "0.16.0"}

# Editor Crates
space_prefab = { version = "0.8.0", path = "crates/prefab" }
space_shared = { version = "0.8.0", path = "crates/shared" }
space_undo = { version = "0.8.0", path = "crates/undo" }
space_persistence = { version = "0.8.0", path = "crates/persistence"}
space_editor_core = { version = "0.8.0", path = "crates/editor_core", features = ["persistence_editor"] }
space_editor_ui = { version = "0.8.0", path = "crates/editor_ui", features = ["persistence_editor"] }
space_editor_tabs = { version = "0.8.0", path = "crates/editor_tabs" }
space_editor_game_view = { version = "0.8.0", path = "crates/editor_game_view" }

# Crates inner libraries
anyhow = "1.0"
pretty-type-name = "1"
rand = "0.9.1"
ron = "0.10.1"
serde = "1.0"
convert_case = "0.8.0"
image = "0.25.6"

# Egui crates
bevy_egui = "0.34"
egui_extras = { version = "0.31.1", features = ["all_loaders"] }
egui_dock = "0.16.0"
egui_file = "0.22.1"
egui-toast = "0.17.0"

bevy-scene-hook = {git = "https://github.com/MiniMinerX/bevy-scene-hook.git", branch= "dev-0.16"}
bevy_debug_grid = { git = "https://github.com/MiniMinerX/bevy_debug_grid.git", branch = "dev-0.16"}
bevy-inspector-egui = {version = "0.31.0", features = [
    "bevy_pbr",
    "highlight_changes",
]}
#bevy-inspector-egui = { branch = "space_edit", git = "https://github.com/MiniMinerX/bevy-inspector-egui.git", features = [
#    "bevy_pbr",
#    "highlight_changes",
#] }
bevy_mod_billboard = { branch = "dev-0.16", git = "https://github.com/MiniMinerX/bevy_mod_billboard.git"}
bevy_asset_loader = "0.23.0-rc.3"
bevy_panorbit_camera = "0.26"
# bevy_panorbit_camera = { branch = "reflect_component", git = "https://github.com/MiniMinerX/bevy_panorbit_camera.git"}
bevy_mod_outline = {git = "https://github.com/komadori/bevy_mod_outline.git", branch = "bevy-0.16"}

# below has not been updated to bevy 0.16

transform-gizmo-bevy = {git = "https://github.com/jakobhellermann/transform-gizmo.git", branch = "bevy-0.16", package = "transform-gizmo-bevy"}
transform-gizmo-egui = {git = "https://github.com/jakobhellermann/transform-gizmo.git", branch = "bevy-0.16", package = "transform-gizmo-egui"}


#transform-gizmo-egui = {git = "https://github.com/MiniMinerX/transform-gizmo.git"}
#transform-gizmo-bevy = { git = "https://github.com/MiniMinerX/transform-gizmo.git"}




# Community Modules
game_app = { version = "0.1.0", path = "game" }

[dependencies]
bevy.workspace = true
space_editor_ui.workspace = true
space_prefab.workspace = true
game_app.workspace = true

# Tabs
space_editor_game_view.workspace = true

# Modules for external crates
workspace-hakari = { version = "0.1", path = "workspace-hakari" }

[target.'cfg(target_os = "linux")'.dependencies]
backtrace-on-stack-overflow = {version = "0.3", optional = true}

# For versions 1.74+
[workspace.lints.rust]
future-incompatible = "warn"
nonstandard_style = "deny"
non_local_definitions = { level = "allow", priority = 2 }
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }

[workspace.lints.clippy]
nursery = { level = "deny", priority = -1 }
all = { level = "deny", priority = -1 }
# Restricted
get_unwrap = { level = "deny", priority = -1 }
manual_while_let_some = { level = "deny", priority = -1 }
panicking_unwrap = { level = "deny", priority = -1 }
unnecessary_unwrap = { level = "deny", priority = -1 }
unnecessary_literal_unwrap = { level = "deny", priority = -1 }
unwrap_in_result = { level = "deny", priority = -1 }

# Bevy Related
cognitive_complexity = { level = "allow", priority = 2 }
needless_pass_by_ref_mut = { level = "allow", priority = 2 }
significant_drop_in_scrutinee = { level = "allow", priority = 2 }
significant_drop_tightening = { level = "allow", priority = 2 }
too_many_arguments = { level = "allow", priority = 2 }

[lints]
workspace = true


[profile.dev]
opt-level = 1
overflow-checks = false 
incremental = true # works well when target/ is stored
prefer-dynamic = true  # prefer dynamic linking for faster builds

[profile.dev.package."*"]
opt-level = 3
prefer-dynamic = true

[profile.release-fast]
inherits = "release"
debug = 0
strip = "debuginfo"
lto = false
incremental = false

[profile.retail]
inherits = "release"
lto = true

[profile.release-lto]
inherits = "release"
lto = "thin"

[features]
backtrace = ["backtrace-on-stack-overflow"]
persistence_editor = []
no_event_registration = ["space_prefab/no_event_registration"]
default = [
    "persistence_editor", 
    "space_prefab/editor", 
]
