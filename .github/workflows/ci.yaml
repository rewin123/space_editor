name: CI
  
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  # Spell and typos check
  typos:
    name: Spell Check with Typos
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Actions Repository
      uses: actions/checkout@v4
    - name: Check spelling
      uses: crate-ci/typos@master

  # Run cargo test
  test_minimal:
    name: Test without features
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable@stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev 
      - name: Compile
        run: cargo test --no-run --locked --release
      - name: Run cargo test
        run: cargo test --workspace --no-default-features --release
        env:
          RUSTFLAGS: "-C debuginfo=0"
    
  test_all:
    name: Test all features
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable@stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev
      - name: Compile
        run: cargo test --no-run --locked --release
      - name: Run cargo test
        run: cargo test --workspace --all-features --release
        env:
          RUSTFLAGS: "-C debuginfo=0"
  
  test_all_macos_n_windows:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: Test ${{ matrix.os }} all features
    timeout-minutes: 60
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable@stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Compile
        run: cargo test --no-run --locked --release
      - name: Run cargo test
        run: cargo test --workspace --all-features --release
        env:
          RUSTFLAGS: "-C debuginfo=0"


  # Run cargo clippy -- -D warnings
  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable@stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev
      - name: Run clippy
        run: cargo clippy --all-features -- -D warnings


  # Run cargo fmt --all -- --check
  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable@stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt --all -- --check